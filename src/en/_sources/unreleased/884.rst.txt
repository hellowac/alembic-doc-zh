.. change::
    :tags: usecase, batch
    :tickets: 884

    Named CHECK constraints are now supported by batch mode, and will
    automatically be part of the recreated table assuming they are named. They
    also can be explicitly dropped using ``op.drop_constraint()``. For
    "unnamed" CHECK constraints, these are still skipped as they cannot be
    distinguished from the CHECK constraints that are generated by the
    ``Boolean`` and ``Enum`` datatypes.

    Note that this change may require adjustments to migrations that drop or
    rename columns which feature an associated named check constraint, such
    that an additional ``op.drop_constraint()`` directive should be added for
    that named constraint as there will no longer be an associated column
    for it; for the ``Boolean`` and ``Enum`` datatypes, an ``existing_type``
    keyword may be passed to ``BatchOperations.drop_constraint`` as well.

    .. seealso::

      :ref:`batch_schematype_constraints`

      :ref:`batch_check_constraints`

